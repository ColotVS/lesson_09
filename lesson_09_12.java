public class lesson_09_12 {
    //Наносекунды
    //Современные компьютеры гораздо быстрее, чем во времена создания Java.
    //Поэтому паузы в 1 миллисекунду может быть уже недостаточно.

    //Допустим мы осуществляем какое-то очень быстрое действие и хотим выполнять его 2000 раз в секунду.
    //Как нам сделать паузу в пол миллисекунды?

    //А вот для этого есть еще одна модификация метода Thread.sleep():
    //Thread.sleep(миллисекунды, наносекунды);
    //Данный метод усыпляет программу на указанное время миллисекунд и наносекунд.

    //Наносекунды — это 1 миллионная от миллисекунд. Поэтому пауза в полторы миллисекунды будет выглядеть так:
    //Thread.sleep(1, 500_000);

    //Ну а если вы хотите паузу в 1/10 миллисекунды, вам нужно будет написать так:
    //Thread.sleep(0, 100_000);

    //В классе Solution реализуй метод printNumbers(),
    //который выводит числа от 1 до 10 включительно с паузой между выводом каждого числа — 1,3 миллисекунды.
    //В этом тебе поможет метод sleep(long, int) класса Thread, который должен сработать 9 раз.

    public static void main(String[] args) throws InterruptedException {
        printNumbers();
    }

    public static void printNumbers() throws InterruptedException {
        for (int i = 1; i <=10 ; i++) {
            System.out.println(i);
            if (i == 10)
                break;
            Thread.sleep(1,300_000);
        }

    }
}
