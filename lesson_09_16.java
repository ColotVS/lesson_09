public class lesson_09_16 {
    //Побитовый оператор XOR (ИСКЛЮЧАЮЩЕЕ ИЛИ)
    //Оператор XOR, его еще называют исключающее или, обозначается символом ^.
    //Чтобы ввести его на клавиатуре, нужно нажать shift+6 (в английской раскладке).

    //a ^ b

    //Данный оператор чем-то похож на оператор OR, (он даже называется похоже — XOR)
    //Побитовый XOR (ИСКЛЮЧАЮЩЕЕ ИЛИ) означает, что «результирующий бит равен единице, если бит числа a равен единице ИЛИ бит числа b равен единице, но не оба одновременно»:
    //1 ^ 1 = 0
    //1 ^ 0 = 1
    //0 ^ 1 = 1
    //0 ^ 0 = 0

    //Пример	        Результат
    //0b0011 ^ 0b1010   0b1001
    //0b1110 ^ 0b0000   0b1110
    //0b1010 ^ 0b0101   0b1111
    //0b1111 ^ 0b1010   0b0101

    //В классе Pair реализуй метод swap() так, чтобы он менял местами значения переменных x и y.
    //Можно использовать только операции:
    //
    //Исключающее или.
    //Присваивание.
    //Исключающее или с присваиванием.
    //Не оставляй комментарии, не меняй остальной код.
    public static void main(String[] args) {
        Pair pair = new Pair(4, 5);
        System.out.println(pair);
        pair.swap();
        System.out.println(pair);
    }
}
class Pair {
    private int x;
    private int y;

    public Pair(int x, int y) {
        this.x = x;
        this.y = y;
    }

    @Override
    public String toString() {
        return String.format("x=%d, y=%d", x, y);
    }

    public void swap() {
        x ^= y;
        y ^= x;
        x ^= y;
    }
}


